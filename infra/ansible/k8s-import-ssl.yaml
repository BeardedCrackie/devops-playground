- name: Import SSL wildcard certificate to Kubernetes
  hosts: localhost
  become: true
  gather_facts: false
  collections:
    - kubernetes.core
  vars:
    kubeconfig: ~/.kube/microk8s_config
    ssl_dir: /etc/ssl/scripts/ssl
    ca_key_file: "{{ ssl_dir }}/ca.key"
    ca_cert_file: "{{ ssl_dir }}/ca.crt"
    wildcard_key_file: "{{ ssl_dir }}/wildcard.k8s.local.key"
    wildcard_cert_file: "{{ ssl_dir }}/wildcard.k8s.local.crt"
    secret_name: wildcard-k8s-local-tls
    target_namespace: ingress
  tasks:
    - name: Check if SSL certificates exist
      stat:
        path: "{{ item }}"
      register: ssl_files
      loop:
        - "{{ ca_cert_file }}"
        - "{{ wildcard_cert_file }}"
        - "{{ wildcard_key_file }}"
      failed_when: not ssl_files.results | map(attribute='stat.exists') | list | all

    - name: Ensure ingress namespace exists
      k8s:
        api_version: v1
        kind: Namespace
        name: "{{ target_namespace }}"
        state: present
        kubeconfig: "{{ kubeconfig }}"

    - name: Read wildcard certificate file
      slurp:
        src: "{{ wildcard_cert_file }}"
      register: wildcard_cert_content

    - name: Read wildcard private key file
      slurp:
        src: "{{ wildcard_key_file }}"
      register: wildcard_key_content

    - name: Create or update TLS secret in Kubernetes
      k8s:
        state: present
        kubeconfig: "{{ kubeconfig }}"
        resource_definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secret_name }}"
            namespace: "{{ target_namespace }}"
          type: kubernetes.io/tls
          data:
            tls.crt: "{{ wildcard_cert_content.content }}"
            tls.key: "{{ wildcard_key_content.content }}"

    - name: Display certificate information
      debug:
        msg: |
          SSL wildcard certificate has been successfully imported to Kubernetes!
          
          Certificate details:
          - Secret name: {{ secret_name }}
          - Namespace: {{ target_namespace }}
          - Certificate file: {{ wildcard_cert_file }}
          - Private key file: {{ wildcard_key_file }}
          - CA certificate file: {{ ca_cert_file }}
          
          The certificate covers:
          - *.k8s.local
          - k8s.local
          
          NGINX Ingress Controller Configuration:
          ✅ ConfigMap updated: nginx-load-balancer-microk8s-conf
          ✅ DaemonSet updated: nginx-ingress-microk8s-controller
          ✅ Default SSL certificate configured
          
          To trust this certificate on Windows:
          1. Copy {{ ca_cert_file }} (or /tmp/ca.crt) to your Windows machine
          2. Run PowerShell as Administrator and execute:
             Import-Certificate -FilePath "ca.crt" -CertStoreLocation Cert:\LocalMachine\Root
          3. Or use the generated script: /tmp/import-ca-windows.ps1
          4. Or use Certificate Manager (certmgr.msc) to import to "Trusted Root Certification Authorities"

          Your *.k8s.local ingresses should now use the wildcard certificate by default!

    - name: Update NGINX Ingress ConfigMap for default SSL
      kubernetes.core.k8s:
        state: present
        merge_type: merge
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: nginx-load-balancer-microk8s-conf
            namespace: "{{ target_namespace }}"
            labels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/part-of: ingress-nginx
          data:
            default-ssl-certificate: "{{ target_namespace }}/{{ secret_name }}"
            ssl-protocols: "TLSv1.2 TLSv1.3"
            ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
            ssl-prefer-server-ciphers: "on"
            hsts: "true"
            hsts-max-age: "31536000"
            hsts-include-subdomains: "true"
            force-ssl-redirect: "true"
        kubeconfig: "{{ kubeconfig }}"

    - name: Update NGINX Ingress Controller DaemonSet with default SSL certificate
      kubernetes.core.k8s:
        state: present
        merge_type: merge
        definition:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: nginx-ingress-microk8s-controller
            namespace: "{{ target_namespace }}"
          spec:
            template:
              spec:
                containers:
                - name: nginx-ingress-microk8s
                  args:
                    - /nginx-ingress-controller
                    - --configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf
                    - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf
                    - --udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf
                    - --ingress-class=public
                    - --publish-status-address=127.0.0.1
                    - --default-ssl-certificate={{ target_namespace }}/{{ secret_name }}
        kubeconfig: "{{ kubeconfig }}"

